How did viewing a diff between two versions of a file help you see the bug that was introduced?
I'm a programmer so I have done this before. Benefits are obvious.
How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
You can revert back to old things that work when new changes don't work.
What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Manual saves will mess you up when you forget to commit or your system unexpectedly crashes/quits.
Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Git allows it because the separate files are part of a greater whole in this example a game where all files are often updated and need to be saved. This doesnt happen much for users of Google Docs where focus is usually on one file at a time.
How can you use the commands git log and git diff to view the history of files?
Log shows a history of commits and thus changes events over time while diff shows the spcific changes when comparing two commits.
How might using version control make you more confident to make changes that could break something?
You can see that it protects you from past mistakes by reverting back to older versions as needed.
Now that you have your workspace set up, what do you want to try using Git for?
Pretty much all my coding henceforward for Udacity courses and my work stuff.
